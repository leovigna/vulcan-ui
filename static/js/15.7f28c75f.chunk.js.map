{"version":3,"sources":["views/AggregatorAddView/AggregatorAddView.js"],"names":["AggregatorAddView","props","loading","className","xs","sm","md","initialValues","name","address","validate","values","errors","onSubmit","setSubmitting","console","debug","addCustomContract","touched","handleChange","handleSubmit","handleBlur","isSubmitting","for","type","value","onChange","placeholder","disabled","Component","connect","state","customContracts","persisted","dispatch","contract","ADD_CUSTOM_CONTRACT"],"mappings":"4SAqBMA,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAIVC,QAAU,kBAAM,yBAAKC,UAAU,oCAAf,eALG,E,sEAOT,IAAD,OAEL,OACI,yBAAKA,UAAU,mBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,KACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,8BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,cAAe,CAAEC,KAAM,GAAIC,QAAS,IACpCC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAQf,OAPKD,EAAOH,OACRI,EAAOJ,KAAO,YAEbG,EAAOF,UACRG,EAAOH,QAAU,YAGdG,GAEXC,SAAU,SAACF,EAAD,GAAgC,IAArBG,EAAoB,EAApBA,cACjBC,QAAQC,MAAML,GACd,EAAKV,MAAMgB,kBAAkBN,GAC7BG,GAAc,MAGjB,gBACGH,EADH,EACGA,OACAC,EAFH,EAEGA,OACAM,EAHH,EAGGA,QACAC,EAJH,EAIGA,aAEAC,GANH,EAKGC,WALH,EAMGD,cACAE,EAPH,EAOGA,aAPH,OAUO,kBAAC,IAAD,CAAMT,SAAUO,GACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOG,IAAI,WAAX,iBACA,kBAAC,IAAD,CACIC,KAAK,OACLC,MAAOd,EAAOH,KACdkB,SAAUP,EACVX,KAAK,OACLmB,YAAY,qCAEff,EAAOJ,MAAQU,EAAQV,MAAQI,EAAOJ,MAE3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOe,IAAI,WAAX,oBACA,kBAAC,IAAD,CACIC,KAAK,OACLC,MAAOd,EAAOF,QACdiB,SAAUP,EACVX,KAAK,UACLmB,YAAY,2BAEff,EAAOH,SAAWS,EAAQT,SAAWG,EAAOH,SAEjD,kBAAC,IAAD,CAAQe,KAAK,SAASI,SAAUN,GAAhC,+B,GArEhBO,aA8FjBC,uBAXf,SAAyBC,GAErB,MAAO,CAAEC,gBADaD,EAAdE,UAC4BD,oBAGxC,SAA2BE,GACvB,MAAO,CACHjB,kBAAmB,SAAAkB,GAAQ,OAAID,EAAS,CAAEV,KAAMY,IAAqBD,iBAI9DL,CAA4C9B","file":"static/js/15.7f28c75f.chunk.js","sourcesContent":["/* eslint @typescript-eslint/explicit-function-return-type:0 */\n/* eslint prefer-spread:0 */\n\nimport React, { Component } from 'react';\nimport {\n    Col,\n    Row,\n    Card,\n    CardBody,\n    CardHeader,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\n\nimport { Formik } from 'formik';\nimport { ADD_CUSTOM_CONTRACT } from \"../../reducers/customContracts\"\nimport { connect } from 'react-redux'\n\nclass AggregatorAddView extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n\n    loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>;\n\n    render() {\n        const parent = this;\n        return (\n            <div className=\"animated fadeIn\">\n                <Row>\n                    <Col xs=\"12\" sm=\"12\" md=\"6\">\n                        <Card>\n                            <CardHeader>Add Oracle Aggregator</CardHeader>\n                            <CardBody>\n                                <Formik\n                                    initialValues={{ name: '', address: '' }}\n                                    validate={values => {\n                                        const errors = {};\n                                        if (!values.name) {\n                                            errors.name = 'Required';\n                                        }\n                                        if (!values.address) {\n                                            errors.address = 'Required';\n                                        }\n\n                                        return errors;\n                                    }}\n                                    onSubmit={(values, { setSubmitting }) => {\n                                        console.debug(values)\n                                        this.props.addCustomContract(values)\n                                        setSubmitting(false);\n                                    }}\n                                >\n                                    {({\n                                        values,\n                                        errors,\n                                        touched,\n                                        handleChange,\n                                        handleBlur,\n                                        handleSubmit,\n                                        isSubmitting,\n                                        /* and other goodies */\n                                    }) => (\n                                            <Form onSubmit={handleSubmit}>\n                                                <FormGroup>\n                                                    <Label for=\"address\">Contract Name</Label>\n                                                    <Input\n                                                        type=\"text\"\n                                                        value={values.name}\n                                                        onChange={handleChange}\n                                                        name=\"name\"\n                                                        placeholder=\"Enter Contract Name (eg. EURUSD)\"\n                                                    />\n                                                    {errors.name && touched.name && errors.name}\n                                                </FormGroup>\n                                                <FormGroup>\n                                                    <Label for=\"address\">Contract Address</Label>\n                                                    <Input\n                                                        type=\"text\"\n                                                        value={values.address}\n                                                        onChange={handleChange}\n                                                        name=\"address\"\n                                                        placeholder=\"Enter Contract Address\"\n                                                    />\n                                                    {errors.address && touched.address && errors.address}\n                                                </FormGroup>\n                                                <Button type=\"submit\" disabled={isSubmitting}>Add Aggregator</Button>\n                                            </Form>\n                                        )}\n                                </Formik>\n\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { persisted } = state\n    return { customContracts: persisted.customContracts }\n}\n\nfunction mapDipatchToProps(dispatch) {\n    return {\n        addCustomContract: contract => dispatch({ type: ADD_CUSTOM_CONTRACT, contract }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDipatchToProps)(AggregatorAddView);"],"sourceRoot":""}