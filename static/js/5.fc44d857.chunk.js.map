{"version":3,"sources":["components/FeedCardDetailed/FeedCardDetailedGrid.tsx","components/FeedCardDetailed/FeedCardDetailed.tsx","assets/img/icons/heart_filled.svg","assets/img/icons/heart_empty.svg","components/ProtocolCard/index.tsx","components/FeedCardDetailed/FeedCardDetailedTable.tsx","views/HomeView/HomeView.tsx"],"names":["FeedCardDetailedGrid","feeds","setContractFavorite","history","useHistory","map","idx","id","title","name","ens","protocol","protocolInfo","address","networkId","favorite","state","answerRenderOptions","url","hearted","protocolImg","img","valueRender","value","renderAnswer","timestampRender","timestamp","moment","format","key","lg","md","xs","onHeartClick","handleClickViewButton","push","feedName","feedENS","nodeCount","lastUpdate","FeedCardDetailed","style","maxWidth","height","boxShadow","borderRadius","className","width","objectFit","src","alt","textAlign","lineHeight","fontSize","fontWeight","onClick","padding","HeartFilled","HeartEmpty","sm","fontStyle","color","href","background","border","boxSizing","fontFamily","target","module","exports","ProtocolCard","active","description","feedCount","sponsorCount","marginBottom","defaultProps","FeedCardDetailedTable","borderCollapse","borderSpacing","minWidth","protocolUrl","rel","HomeView","favoriteFeeds","protocols","currentBlock","refreshFeedList","drizzleContext","useState","minimizeFavoriteFeeds","setMinimizeFavoriteFeeds","drizzle","initialized","useEffect","timer","setTimeout","clearTimeout","displayedFavoriteFeeds","slice","marginTop","paddingTop","paddingBottom","marginRight","marginLeft","length","compose","withSetContractFavorite","withSetCacheKey","withRefreshFeedList","withNetworkId","withCurrentBlock","withProtocols","withFeeds","withFavoriteFeeds","withDrizzleContext"],"mappings":"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","file":"static/js/5.fc44d857.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    CCol as Col,\n} from '@coreui/react'\nimport {\n    useHistory\n} from \"react-router-dom\"\n\nimport FeedCardDetailed from './FeedCardDetailed'\nimport { FeedTypes } from '../../store/types'\nimport { renderAnswer } from '../../store/feed/actions';\nimport moment from 'moment';\nimport { SetContractFavoriteActionInput, SetContractFavoriteAction } from '../../store/contractFavorite/types';\n\ninterface Props {\n    feeds: FeedTypes.Feed[],\n    setContractFavorite: (payload: SetContractFavoriteActionInput) => SetContractFavoriteAction;\n}\n\nconst FeedCardDetailedGrid = ({ feeds, setContractFavorite }: Props) => {\n    const history = useHistory();\n    return (<> {\n        feeds.map(({ id, title, name, ens, protocol, protocolInfo, address, networkId, favorite, state, answerRenderOptions }, idx) => {\n            const url = `/feeds/${protocol}/${name}`\n            const hearted = favorite?.favorite || false\n            const protocolImg = protocolInfo?.img || ''\n            const valueRender = state?.value ? renderAnswer(answerRenderOptions!, state!.value) : ''\n            const timestampRender = state?.timestamp ? moment(state!.timestamp, 'X').format('MMMM D - h:mm A') : '';\n\n            return (<Col key={idx} lg=\"4\" md=\"6\" xs=\"12\">\n                <FeedCardDetailed onHeartClick={() => setContractFavorite({ id, address, networkId, favorite: !hearted })} handleClickViewButton={() => history.push(url)} address={address} protocolImg={protocolImg} feedName={title} value={valueRender} hearted={hearted} feedENS={ens} nodeCount={0} lastUpdate={timestampRender} />\n            </Col>)\n        })\n    }</>)\n}\n\nexport default FeedCardDetailedGrid;","import React from 'react';\nimport {\n    CContainer as Container,\n    CCard as Card,\n    CCardBody as CardBody,\n    CRow as Row,\n    CCol as Col,\n    CButton as Button\n} from '@coreui/react'\n\nimport HeartFilled from '../../assets/img/icons/heart_filled.svg'\nimport HeartEmpty from '../../assets/img/icons/heart_empty.svg'\n\ninterface Props {\n    address: string,\n    protocolImg: string,\n    feedName: string,\n    hearted: boolean,\n    onHeartClick: any,\n    value: string,\n    feedENS?: string,\n    lastUpdate?: string,\n    nodeCount?: number\n    handleClickViewButton: any\n}\n\nconst FeedCardDetailed = ({ handleClickViewButton, protocolImg, feedName, hearted, onHeartClick, value, feedENS, lastUpdate, nodeCount, address }: Props) => <Card style={{\n    maxWidth: '300px',\n    height: '270px',\n    boxShadow: \"1px 1px 5px rgba(0, 0, 0, 0.5)\",\n    borderRadius: '8px'\n}} >\n    <CardBody className=\"px-0\">\n        <Container>\n            <Row>\n                <div className=\"d-flex justify-content-center\" style={{ width: '100%' }}>\n                    <img style={{ width: 37, objectFit: 'contain' }} src={protocolImg} alt=''></img>\n                    <div className=\"d-flex justify-content-center flex-column\">\n                        <span style={{ width: 155, textAlign: 'center', lineHeight: '18px', fontSize: 16, fontWeight: 'bold' }}>{feedName}</span>\n                    </div>\n                    <Button onClick={onHeartClick} style={{ padding: 0 }}><img style={{ width: 31, objectFit: 'contain' }} src={hearted ? HeartFilled : HeartEmpty} alt=''></img></Button>\n                </div>\n            </Row>\n            <Row>\n                <Col className=\"py-2\" sm=\"12\"></Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\">\n                    <p style={{ fontSize: 23, fontStyle: 'italic', fontWeight: 'bold', color: '#4F4F4F', textAlign: 'center' }}>{value || \"loading...\"}</p>\n                </Col>\n                <Col sm=\"12\">\n                    <p style={{ color: '#002C69', fontSize: 16, textAlign: 'center' }}>{lastUpdate}</p>\n                </Col>\n                <Col sm=\"12\">\n                    {\n                        feedENS ? <div className=\"d-flex justify-content-center\">\n                            <b style={{ color: '#002C69', fontSize: 16 }}>ENS:&nbsp;</b><a style={{ color: '#002C69', fontSize: 16 }} href='https://etherscan.com'>{feedENS}</a>\n                        </div> : ''\n                    }\n\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"6\">\n                    {\n                        nodeCount ? <div style={{ color: '#002C69', fontSize: 16, textAlign: 'center' }}>{nodeCount} Nodes</div> : ''\n                    }\n                </Col>\n                <Col sm=\"12\" className=\"d-flex justify-content-center\">\n                    <Button onClick={handleClickViewButton} style={{\n                        width: 160,\n                        height: 48,\n                        background: \"#FA4706\",\n                        border: \"1px solid #C53400\",\n                        boxSizing: \"border-box\",\n                        borderRadius: \"8px\",\n                        fontFamily: \"Poppins\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        fontSize: \"20px\",\n                        textAlign: \"center\",\n                        color: '#FFFFFF'\n                    }}>\n                        View\n                            </Button>\n                </Col>\n                <Col sm=\"12\" className=\"d-flex py-2 justify-content-center\">\n                    {\n                        address ? <a style={{ color: '#828282', fontStyle: 'italic' }} href={`https://etherscan.com/address/${address}`} target=\"_blank\">Etherscan Contract</a> : ''\n                    }\n                </Col>\n            </Row>\n        </Container>\n    </CardBody>\n</Card>\n\nexport default FeedCardDetailed;","module.exports = __webpack_public_path__ + \"static/media/heart_filled.1abb42ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart_empty.0c528db6.svg\";","import React from 'react';\nimport {\n    CCard as Card,\n    CCardBody as CardBody,\n    CRow as Row,\n    CCol as Col,\n} from '@coreui/react'\n\ninterface Props {\n    href: string,\n    active: boolean,\n    name: string,\n    description: string,\n    img: string,\n    feedCount: number,\n    nodeCount: number,\n    sponsorCount: number\n}\n\nconst ProtocolCard = ({ href, active, name, description, img, feedCount, nodeCount, sponsorCount }: Props) => <Card style={{\n    width: '260px',\n    height: '290px',\n    boxShadow: \"1px 1px 5px rgba(0, 0, 0, 0.5)\",\n    borderRadius: '8px'\n}} >\n    <CardBody>\n        <a href={href} className=\"stretched-link\"></a>\n        <Row>\n            <Col className=\"py-2\" sm=\"12\">\n                <div className=\"d-flex justify-content-center\">\n                    <img style={{ height: 75 }} src={img} alt='' />\n                </div>\n            </Col>\n            <Col className=\"py-0\" sm=\"12\">\n                <div style={{ textAlign: 'center', fontSize: 20, fontWeight: 'normal', color: '#000000' }}>{name}</div>\n            </Col>\n            <Col className=\"py-0\" sm=\"12\">\n                <div className=\"d-flex justify-content-center\">\n                    <p style={{ maxWidth: 160, height: 55, fontSize: 12, textAlign: 'center', marginBottom: 5 }}>{description}</p>\n                </div>\n            </Col>\n            <Col sm=\"12\">\n                {active ? <div className=\"d-flex justify-content-center\">\n                    <p style={{ maxWidth: 160, fontSize: 16, textAlign: 'center', color: '#000000' }}>\n                        {feedCount > 0 ? <>{feedCount} Feeds<br /></> : ''}\n                        {nodeCount > 0 ? <>{nodeCount} Nodes<br /></> : ''}\n                        {sponsorCount > 0 ? <>{sponsorCount} Sponsors</> : ''}\n                    </p>\n                </div> :\n                    <div className=\"d-flex justify-content-center\">\n                        <p style={{ maxWidth: 160, fontSize: 16, textAlign: 'center', color: '#000000' }}>\n                            Coming soon...\n                    </p>\n                    </div>\n                }\n            </Col>\n        </Row>\n    </CardBody>\n</Card>\n\nProtocolCard.defaultProps = {\n    feedCount: 0,\n    nodeCount: 0,\n    sponsorCount: 0\n}\n\nexport default ProtocolCard;","import React from 'react';\nimport { CButton as Button } from '@coreui/react';\nimport { FeedTypes } from '../../store/types';\nimport { renderAnswer } from '../../store/feed/actions';\nimport moment from 'moment';\nimport HeartFilled from '../../assets/img/icons/heart_filled.svg';\nimport HeartEmpty from '../../assets/img/icons/heart_empty.svg';\nimport { SetContractFavoriteActionInput, SetContractFavoriteAction } from '../../store/contractFavorite/types';\n\ninterface Props {\n    feeds: FeedTypes.Feed[];\n    setContractFavorite: (payload: SetContractFavoriteActionInput) => SetContractFavoriteAction;\n}\n\nconst FeedCardDetailedTable = ({ feeds, setContractFavorite }: Props) => {\n    return (\n        <table\n            className=\"table table-outline mb-0 d-sm-table table-responsive table-borderless\"\n            style={{ borderCollapse: 'collapse', border: 'none', borderSpacing: 0 }}\n        >\n            <thead>\n                <tr>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', minWidth: 50 }}\n                    >\n                        Protocol\n                    </th>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', minWidth: 100 }}\n                    >\n                        Name\n                    </th>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', maxWidth: 400 }}\n                    >\n                        Address\n                    </th>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', minWidth: 100 }}\n                    >\n                        Value\n                    </th>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', minWidth: 100 }}\n                    >\n                        Last Update\n                    </th>\n                    <th\n                        className=\"px-1 py-3\"\n                        style={{ border: 'none', fontSize: 16, fontWeight: 'bold', color: '#FA4706', maxWidth: 50 }}\n                    >\n                        Favorite\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                {feeds.map(\n                    ({\n                        id,\n                        name,\n                        protocol,\n                        protocolInfo,\n                        address,\n                        networkId,\n                        favorite,\n                        state,\n                        answerRenderOptions,\n                    }) => {\n                        const url = `#/feeds/${protocol}/${name}`;\n                        const protocolUrl = `#/protocols/${protocol}`;\n                        const hearted = favorite?.favorite || false;\n                        const protocolImg = protocolInfo?.img || '';\n                        const valueRender = state?.value ? renderAnswer(answerRenderOptions!, state!.value) : '';\n                        const timestampRender = state?.timestamp\n                            ? moment(state!.timestamp, 'X').format('MMMM D - h:mm A')\n                            : '';\n\n                        return (\n                            <tr key={id}>\n                                <td className=\"px-1 py-3\">\n                                    <a href={protocolUrl}>\n                                        <img\n                                            style={{ width: 37, objectFit: 'contain' }}\n                                            src={protocolImg}\n                                            alt={protocol}\n                                        />\n                                    </a>\n                                </td>\n                                <td className=\"px-1 py-3\">\n                                    <a href={url}>{name}</a>\n                                </td>\n                                <td className=\"px-1 py-3\" style={{ fontSize: 15, fontWeight: 300, color: '#000000' }}>\n                                    <a\n                                        style={{ color: '#828282', fontStyle: 'italic' }}\n                                        href={`https://etherscan.com/address/${address}`}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {address}\n                                    </a>\n                                </td>\n                                <td className=\"px-1 py-3\" style={{ fontSize: 15, fontWeight: 300, color: '#000000' }}>\n                                    {valueRender || 'loading...'}\n                                </td>\n                                <td className=\"px-1 py-3\" style={{ fontSize: 15, fontWeight: 300, color: '#000000' }}>\n                                    {timestampRender || 'loading...'}\n                                </td>\n                                <td className=\"px-1 py-3\">\n                                    <Button\n                                        onClick={() =>\n                                            setContractFavorite({ id, address, networkId, favorite: !hearted })\n                                        }\n                                        style={{ padding: 0 }}\n                                    >\n                                        <img\n                                            style={{ width: 31, objectFit: 'contain' }}\n                                            src={hearted ? HeartFilled : HeartEmpty}\n                                            alt=\"\"\n                                        ></img>\n                                    </Button>\n                                </td>\n                            </tr>\n                        );\n                    },\n                )}\n            </tbody>\n        </table>\n    );\n};\n\nexport default FeedCardDetailedTable;\n","import React, { useState, useEffect } from 'react';\nimport { CRow as Row, CCol as Col, CContainer as Container, CButton as Button } from '@coreui/react';\nimport { compose } from 'recompose'\nimport { withNetworkId, withFeeds, withProtocols, withDrizzleContext, withFavoriteFeeds, withSetContractFavorite, withSetCacheKey, withCurrentBlock, withRefreshFeedList } from '../../hoc'\n\nimport ProtocolCard from '../../components/ProtocolCard';\nimport FeedCardDetailedGrid from '../../components/FeedCardDetailed/FeedCardDetailedGrid';\nimport { Feed, RefreshFeedListActionInput, RefreshFeedListAction } from '../../store/feed/types';\nimport { Protocol } from '../../store/protocol/types';\nimport FeedCardDetailedTable from '../../components/FeedCardDetailed/FeedCardDetailedTable';\nimport { SetContractFavoriteActionInput, SetContractFavoriteAction } from '../../store/contractFavorite/types';\nimport { Block } from '../../store/block/types';\n\ninterface Props {\n    feeds: Feed[];\n    favoriteFeeds: Feed[];\n    protocols: Protocol[];\n    currentBlock: Block;\n    setContractFavorite: (payload: SetContractFavoriteActionInput) => SetContractFavoriteAction;\n    refreshFeedList: (payload: RefreshFeedListActionInput) => RefreshFeedListAction,\n    drizzleContext: any\n}\n\nconst HomeView = ({ feeds, favoriteFeeds, protocols, currentBlock, setContractFavorite, refreshFeedList, drizzleContext }: Props) => {\n    const [minimizeFavoriteFeeds, setMinimizeFavoriteFeeds] = useState(true);\n    const toggleMinimizeFavoriteFeeds = () => setMinimizeFavoriteFeeds(!minimizeFavoriteFeeds);\n\n    const { drizzle, initialized } = drizzleContext;\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            if (initialized && !!feeds) {\n                refreshFeedList({\n                    feeds,\n                    drizzle,\n                    currentBlock\n                })\n            }\n        }, 100);\n        return () => clearTimeout(timer);\n    })\n\n    const favoriteFeedsMinimizeCount = 3;\n    const displayedFavoriteFeeds = minimizeFavoriteFeeds\n        ? favoriteFeeds.slice(0, favoriteFeedsMinimizeCount)\n        : favoriteFeeds;\n\n    return (\n        <div style={{ marginTop: -200, paddingTop: 100, paddingBottom: 50, marginRight: -15, marginLeft: -15 }}>\n            <Container>\n                <Row>\n                    <Col xs={12}>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939', height: 95 }}>Protocols</h1>\n                    </Col>\n                    {protocols.map(\n                        ({ description, active, id, name, img, feedCount, nodeCount, sponsorCount }, idx) => (\n                            <Col key={idx} lg=\"3\" md=\"6\" xs=\"12\">\n                                <ProtocolCard\n                                    href={`#/protocols/${id}`}\n                                    active={active}\n                                    name={name}\n                                    description={description}\n                                    img={img}\n                                    feedCount={feedCount}\n                                    nodeCount={nodeCount}\n                                    sponsorCount={sponsorCount}\n                                />\n                            </Col>\n                        ),\n                    )}\n                </Row>\n                <Row>\n                    <Col xs={12}>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939' }}>Favorite Feeds</h1>\n                    </Col>\n                    <FeedCardDetailedGrid setContractFavorite={setContractFavorite} feeds={displayedFavoriteFeeds} />\n                    {favoriteFeeds.length > favoriteFeedsMinimizeCount ? (\n                        <Col xs={12}>\n                            <div className=\"d-flex justify-content-center\">\n                                <Button\n                                    onClick={toggleMinimizeFavoriteFeeds}\n                                    style={{ fontSize: 20, fontWeight: 'medium', color: '#002C69' }}\n                                >\n                                    {minimizeFavoriteFeeds ? (\n                                        <>View All ({favoriteFeeds.length - favoriteFeedsMinimizeCount} more)</>\n                                    ) : (\n                                            <>Hide</>\n                                        )}\n                                </Button>\n                            </div>\n                        </Col>\n                    ) : (\n                            ''\n                        )}\n                </Row>\n                <Row>\n                    <Col xs={12}>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939' }}>Feeds</h1>\n                    </Col>\n                    <Col xs=\"12\">\n                        <FeedCardDetailedTable setContractFavorite={setContractFavorite} feeds={feeds} />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nHomeView.defaultProps = {\n    feeds: [],\n    favoriteFeeds: [],\n    protocols: [],\n};\n\n\nexport default compose(\n    withSetContractFavorite,\n    withSetCacheKey,\n    withRefreshFeedList,\n    withNetworkId,\n    withCurrentBlock,\n    withProtocols,\n    withFeeds,\n    withFavoriteFeeds,\n    withDrizzleContext,\n    //@ts-ignore\n)(HomeView);\n"],"sourceRoot":""}