{"version":3,"sources":["components/FeedCardDetailed/FeedCardDetailedGrid.tsx","components/FeedCardDetailed/FeedCardDetailed.tsx","assets/img/icons/heart_filled.svg","assets/img/icons/heart_empty.svg","views/ProtocolView/ProtocolView.tsx","components/FeedCardDetailed/index.tsx","views/ProtocolView/WrappedProtocolView.tsx"],"names":["FeedCardDetailedGrid","feeds","setContractFavorite","history","useHistory","map","idx","id","title","name","ens","protocol","protocolInfo","address","networkId","favorite","state","answerRenderOptions","url","hearted","protocolImg","img","valueRender","value","renderAnswer","timestampRender","timestamp","moment","format","key","lg","md","xs","onHeartClick","handleClickViewButton","push","feedName","feedENS","nodeCount","lastUpdate","FeedCardDetailed","style","maxWidth","height","boxShadow","borderRadius","className","width","objectFit","src","alt","textAlign","lineHeight","fontSize","fontWeight","onClick","padding","HeartFilled","HeartEmpty","sm","fontStyle","color","href","background","border","boxSizing","fontFamily","target","module","exports","ProtocolView","descriptionLong","feedCount","useState","minimizeFeeds","setMinimizeFeeds","displayedFeeds","slice","marginTop","paddingTop","paddingBottom","marginRight","marginLeft","replace","length","defaultProps","nodes","feedValues","compose","flattenProp","withSetContractFavorite","withSetCacheKey","withNetworkId","withProtocol","withDrizzleContext"],"mappings":"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","file":"static/js/6.ded613a3.chunk.js","sourcesContent":["import React from 'react';\nimport {\n    CCol as Col,\n} from '@coreui/react'\nimport {\n    useHistory\n} from \"react-router-dom\"\n\nimport FeedCardDetailed from './FeedCardDetailed'\nimport { FeedTypes } from '../../store/types'\nimport { renderAnswer } from '../../store/feed/actions';\nimport moment from 'moment';\nimport { SetContractFavoriteActionInput, SetContractFavoriteAction } from '../../store/contractFavorite/types';\n\ninterface Props {\n    feeds: FeedTypes.Feed[],\n    setContractFavorite: (payload: SetContractFavoriteActionInput) => SetContractFavoriteAction;\n}\n\nconst FeedCardDetailedGrid = ({ feeds, setContractFavorite }: Props) => {\n    const history = useHistory();\n    return (<> {\n        feeds.map(({ id, title, name, ens, protocol, protocolInfo, address, networkId, favorite, state, answerRenderOptions }, idx) => {\n            const url = `/feeds/${protocol}/${name}`\n            const hearted = favorite?.favorite || false\n            const protocolImg = protocolInfo?.img || ''\n            const valueRender = state?.value ? renderAnswer(answerRenderOptions!, state!.value) : ''\n            const timestampRender = state?.timestamp ? moment(state!.timestamp, 'X').format('MMMM D - h:mm A') : '';\n\n            return (<Col key={idx} lg=\"4\" md=\"6\" xs=\"12\">\n                <FeedCardDetailed onHeartClick={() => setContractFavorite({ id, address, networkId, favorite: !hearted })} handleClickViewButton={() => history.push(url)} address={address} protocolImg={protocolImg} feedName={title} value={valueRender} hearted={hearted} feedENS={ens} nodeCount={0} lastUpdate={timestampRender} />\n            </Col>)\n        })\n    }</>)\n}\n\nexport default FeedCardDetailedGrid;","import React from 'react';\nimport {\n    CContainer as Container,\n    CCard as Card,\n    CCardBody as CardBody,\n    CRow as Row,\n    CCol as Col,\n    CButton as Button\n} from '@coreui/react'\n\nimport HeartFilled from '../../assets/img/icons/heart_filled.svg'\nimport HeartEmpty from '../../assets/img/icons/heart_empty.svg'\n\ninterface Props {\n    address: string,\n    protocolImg: string,\n    feedName: string,\n    hearted: boolean,\n    onHeartClick: any,\n    value: string,\n    feedENS?: string,\n    lastUpdate?: string,\n    nodeCount?: number\n    handleClickViewButton: any\n}\n\nconst FeedCardDetailed = ({ handleClickViewButton, protocolImg, feedName, hearted, onHeartClick, value, feedENS, lastUpdate, nodeCount, address }: Props) => <Card style={{\n    maxWidth: '300px',\n    height: '270px',\n    boxShadow: \"1px 1px 5px rgba(0, 0, 0, 0.5)\",\n    borderRadius: '8px'\n}} >\n    <CardBody className=\"px-0\">\n        <Container>\n            <Row>\n                <div className=\"d-flex justify-content-center\" style={{ width: '100%' }}>\n                    <img style={{ width: 37, objectFit: 'contain' }} src={protocolImg} alt=''></img>\n                    <div className=\"d-flex justify-content-center flex-column\">\n                        <span style={{ width: 155, textAlign: 'center', lineHeight: '18px', fontSize: 16, fontWeight: 'bold' }}>{feedName}</span>\n                    </div>\n                    <Button onClick={onHeartClick} style={{ padding: 0 }}><img style={{ width: 31, objectFit: 'contain' }} src={hearted ? HeartFilled : HeartEmpty} alt=''></img></Button>\n                </div>\n            </Row>\n            <Row>\n                <Col className=\"py-2\" sm=\"12\"></Col>\n            </Row>\n            <Row>\n                <Col sm=\"12\">\n                    <p style={{ fontSize: 23, fontStyle: 'italic', fontWeight: 'bold', color: '#4F4F4F', textAlign: 'center' }}>{value || \"loading...\"}</p>\n                </Col>\n                <Col sm=\"12\">\n                    <p style={{ color: '#002C69', fontSize: 16, textAlign: 'center' }}>{lastUpdate}</p>\n                </Col>\n                <Col sm=\"12\">\n                    {\n                        feedENS ? <div className=\"d-flex justify-content-center\">\n                            <b style={{ color: '#002C69', fontSize: 16 }}>ENS:&nbsp;</b><a style={{ color: '#002C69', fontSize: 16 }} href='https://etherscan.com'>{feedENS}</a>\n                        </div> : ''\n                    }\n\n                </Col>\n            </Row>\n            <Row>\n                <Col sm=\"6\">\n                    {\n                        nodeCount ? <div style={{ color: '#002C69', fontSize: 16, textAlign: 'center' }}>{nodeCount} Nodes</div> : ''\n                    }\n                </Col>\n                <Col sm=\"12\" className=\"d-flex justify-content-center\">\n                    <Button onClick={handleClickViewButton} style={{\n                        width: 160,\n                        height: 48,\n                        background: \"#FA4706\",\n                        border: \"1px solid #C53400\",\n                        boxSizing: \"border-box\",\n                        borderRadius: \"8px\",\n                        fontFamily: \"Poppins\",\n                        fontStyle: \"normal\",\n                        fontWeight: \"500\",\n                        fontSize: \"20px\",\n                        textAlign: \"center\",\n                        color: '#FFFFFF'\n                    }}>\n                        View\n                            </Button>\n                </Col>\n                <Col sm=\"12\" className=\"d-flex py-2 justify-content-center\">\n                    {\n                        address ? <a style={{ color: '#828282', fontStyle: 'italic' }} href={`https://etherscan.com/address/${address}`} target=\"_blank\">Etherscan Contract</a> : ''\n                    }\n                </Col>\n            </Row>\n        </Container>\n    </CardBody>\n</Card>\n\nexport default FeedCardDetailed;","module.exports = __webpack_public_path__ + \"static/media/heart_filled.1abb42ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart_empty.0c528db6.svg\";","import React, { useState } from 'react';\nimport {\n    CRow as Row,\n    CCol as Col,\n    CContainer as Container,\n    CButton as Button\n} from '@coreui/react'\nimport { FeedCardDetailedGrid } from '../../components/FeedCardDetailed'\nimport { Protocol } from '../../store/protocol/types';\nimport { Feed } from '../../store/feed/types';\n\ninterface Props extends Protocol {\n    feeds: Feed[],\n    setContractFavorite: any\n}\n\nconst ProtocolView = ({ name, url, img, descriptionLong, feedCount, nodeCount, feeds, setContractFavorite }: Props) => {\n    const [minimizeFeeds, setMinimizeFeeds] = useState(true);\n    const toggleMinimizeFeeds = () => setMinimizeFeeds(!minimizeFeeds);\n\n    const displayedFeeds = minimizeFeeds ? feeds.slice(0, 9) : feeds\n\n    return (\n        <div style={{ marginTop: -200, paddingTop: 100, paddingBottom: 50, marginRight: -15, marginLeft: -15 }}>\n            <Container>\n                <Row className='py-0'>\n                    <Col className=\"py-2\" sm=\"12\">\n                        <div className=\"d-flex justify-content-left\">\n                            <img style={{ height: 200 }} src={img} alt='' />\n                        </div>\n                    </Col>\n                    <Col xs={12}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Name</h4>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939' }}>{name}</h1>\n                    </Col>\n                    <Col xs={4}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Feeds</h4>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939' }}>{feedCount}</h1>\n                    </Col>\n                    <Col xs={4}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Nodes</h4>\n                        <h1 style={{ fontSize: 40, fontWeight: 'bold', color: '#393939' }}>{nodeCount}</h1>\n                    </Col>\n                </Row>\n                <Row className='py-4'>\n                    <Col xs={12}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Website</h4>\n                        <a href={url} target='blank' style={{ color: '#393939' }}>{url.replace('https://', '')}</a>\n                    </Col>\n                </Row>\n                <Row className='py-4'>\n                    <Col xs={12}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Description</h4>\n                        <p style={{ color: '#393939' }}>{descriptionLong}</p>\n                    </Col>\n                </Row>\n                <Row className='py-4'>\n                    <Col xs={12}>\n                        <h4 style={{ fontSize: 20, fontWeight: 300, color: '#000000' }}>Feeds</h4>\n                        <p style={{ color: '#393939' }}></p>\n                    </Col>\n                    {\n                        displayedFeeds.length > 0 ?\n                            <>\n                                <FeedCardDetailedGrid setContractFavorite={setContractFavorite} feeds={displayedFeeds} />\n                                < Col xs={12}>\n                                    <div className=\"d-flex justify-content-center\">\n                                        <Button onClick={toggleMinimizeFeeds} style={{ fontSize: 20, fontWeight: 'medium', color: '#002C69' }}>{minimizeFeeds ? <>View All</> : <>Hide</>}</Button>\n                                    </div>\n                                </Col>\n                            </> :\n                            <Col xs={12}>\n                                <div className=\"d-flex justify-content-center\">\n                                    No known feeds. More will be added soon.\n                        </div>\n                            </Col>\n                    }\n                </Row>\n            </Container >\n        </div>\n    )\n}\n\nProtocolView.defaultProps = {\n    feedCount: 0,\n    nodeCount: 0,\n    feeds: [],\n    nodes: [],\n    feedValues: {}\n}\n\nexport default ProtocolView;","import FeedCardDetailed from './FeedCardDetailed'\nimport FeedCardDetailedGrid from './FeedCardDetailedGrid'\n\nexport default FeedCardDetailed;\nexport {\n    FeedCardDetailedGrid,\n}\n","import { compose, flattenProp } from 'recompose'\nimport { withNetworkId, withProtocol, withDrizzleContext, withSetContractFavorite, withSetCacheKey } from '../../hoc'\nimport ProtocolView from './ProtocolView'\n\n\nexport default compose(\n    flattenProp('match'),\n    flattenProp('params'),\n    withSetContractFavorite,\n    withSetCacheKey,\n    withNetworkId,\n    withProtocol,\n    flattenProp('protocol'),\n    withDrizzleContext,\n    //@ts-ignore\n)(ProtocolView);"],"sourceRoot":""}